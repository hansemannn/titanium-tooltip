/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2018 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package ti.tooltip;

import org.appcelerator.kroll.KrollModule;
import org.appcelerator.kroll.KrollDict;
import org.appcelerator.kroll.annotations.Kroll;

import org.appcelerator.titanium.TiApplication;
import org.appcelerator.kroll.common.Log;
import org.appcelerator.kroll.common.TiConfig;
import org.appcelerator.titanium.proxy.TiViewProxy;

import android.view.View;
import android.graphics.Color;

import com.github.florent37.viewtooltip.ViewTooltip;

@Kroll.module(name="TitaniumTooltip", id="ti.tooltip")
public class TitaniumTooltipModule extends KrollModule
{
	// Standard Debugging variables
	private static final String LCAT = "TitaniumTooltipModule";
	private static final boolean DBG = TiConfig.LOGD;

	@Kroll.constant public static final int TOOLTIP_POSITION_TOP = 0;
	@Kroll.constant public static final int TOOLTIP_POSITION_BOTTOM = 1;
	@Kroll.constant public static final int TOOLTIP_POSITION_LEFT = 2;
	@Kroll.constant public static final int TOOLTIP_POSITION_RIGHT = 3;

	@Kroll.method
	public void show(KrollDict params)
	{
		TiViewProxy sourceView = (TiViewProxy)params.get("sourceView");

		ViewTooltip.on(TiApplication.getInstance().getCurrentActivity(), sourceView.getOrCreateView().getNativeView())
        
        .clickToHide(true)
        .padding(10, 10, 10, 10)
        
        .text("Hello world!")
        
        .textColor(Color.WHITE)
        .color(Color.BLACK)
        
        .corner(10)

        .arrowWidth(18)
        .arrowHeight(10)

        .distanceWithView(5)
        
        .onDisplay(new ViewTooltip.ListenerDisplay() {
            @Override
            public void onDisplay(View view) {
                
            }
        })
        .onHide(new ViewTooltip.ListenerHide() {
            @Override
            public void onHide(View view) {
                
            }
        })
        .show();
	}
}

